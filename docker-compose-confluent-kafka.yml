version: '3.2'
services:
  portainer:
    image: portainer/portainer
    ports:
      - "9000:9000"
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/mec-poc/portainer_data:/data
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
  zookeeper:
    image: confluentinc/cp-zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
  broker:
    image: confluentinc/cp-enterprise-kafka
    hostname: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_CREATE_TOPICS: 'video-file-name:1:1'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:9092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
  schema-registry:
    image: confluentinc/cp-schema-registry
    hostname: schema-registry
    depends_on:
      - zookeeper
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
  connect:
    image: confluentinc/kafka-connect-datagen:0.1.0
#    build:
#      context: https://github.com/confluentinc/kafka-connect-datagen/raw/master/Dockerfile-confluenthub
#      dockerfile: Dockerfile-confluenthub
    hostname: connect
    depends_on:
      - zookeeper
      - broker
      - schema-registry
    ports:
      - "8083:8083"
    volumes:
      - mi2:/usr/share/java/monitoring-interceptors/
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'broker:9092'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-5.1.0.jar
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-5.0.0.jar
  control-center:
    image: confluentinc/cp-enterprise-control-center
    hostname: control-center
    depends_on:
      - zookeeper
      - broker
      - schema-registry
      - connect
      - ksql-server
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:9092'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONTROL_CENTER_CONNECT_CLUSTER: 'connect:8083'
      CONTROL_CENTER_KSQL_URL: "http://ksql-server:8088"
      CONTROL_CENTER_KSQL_ADVERTISED_URL: "http://localhost:8088"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
  ksql-server:
    image: confluentinc/cp-ksql-server
    hostname: ksql-server
    depends_on:
      - broker
      - connect
    ports:
      - "8088:8088"
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      KSQL_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/ksql/log4j-rolling.properties"
      KSQL_BOOTSTRAP_SERVERS: "broker:9092"
      KSQL_HOST_NAME: ksql-server
      KSQL_APPLICATION_ID: "cp-all-in-one"
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
  ksql-cli:
    image: confluentinc/cp-ksql-cli
    depends_on:
      - broker
      - connect
      - ksql-server
    entrypoint: /bin/sh
    tty: true
  rest-proxy:
    image: confluentinc/cp-kafka-rest
    depends_on:
      - zookeeper
      - broker
      - schema-registry
    ports:
      - 8084:8084
    hostname: rest-proxy
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: 'broker:9092'
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8084"
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=redis:redis:6379
    ports:
      - 9010:8081
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
  job_dispatcher:
    image: ssriram1978/job_dispatcher:latest
    depends_on:
      - broker
      - zookeeper
      - redis
    hostname: job_dispatcher
    environment:
      video_file_path_key: /data
      producer_consumer_type_key: ConfluentKafka
      producer_consumer_queue_type_key: ConfluentKafka
      broker_name_key: broker:9092
      topic_key: video-file-name
      redis_server_hostname_key: redis
      redis_server_port_key: 6379
      redis_log_keyname_key: briefcam-producer-events
      total_job_dequeued_count_redis_name_key: total_job_done_count
      total_job_enqueued_count_redis_name_key: total_job_to_be_done_count
    volumes:
      - /home/mec-poc/fromMobile:/data
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
  auto_scaler:
    image: ssriram1978/auto_scaler:latest
    depends_on:
      - redis
    environment:
      redis_log_keyname_key: auto_scaler
      total_job_enqueued_count_redis_name_key: total_job_to_be_done_count
      total_job_dequeued_count_redis_name_key: total_job_done_count
      redis_server_hostname_key: redis
      redis_server_port_key: 6379
      min_threshold_key: 1
      max_threshold_key: 10
      auto_scale_time_interval_key: 5
      auto_scale_service_name_key: machine_learning_workers
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
  machine_learning_workers:
    image: ssriram1978/machine_learning_workers:latest
    deploy:
      replicas: 1
#      resources:
#        limits:
#          cpus: "0.8"
#          memory: 2000M
      restart_policy:
        condition: on-failure
    ports:
      - target: 5900
    depends_on:
      - broker
      - zookeeper
      - redis
    hostname: machine_learning_workers
    environment:
      video_file_path_key: /data
      broker_name_key: broker:9092
      topic_key: video-file-name
      case_url_key: http://mec-demo/synopsis/
      browser_loc_key: google-chrome
      browser_name_key: /opt/google/chrome/chrome
      case_name_key: MEC-POC
      login_username_key: Brief
      login_password_key: Cam
      image_directory: image_cont
      redis_server_hostname_key: redis
      redis_server_port_key: 6379
      redis_log_keyname_key: briefcam-consumer-events
      total_job_dequeued_count_redis_name_key: total_job_done_count
      max_retry_attempts_key: 8
      data_parser_type_key: BriefCam
      sleep_time_key: 1
      time_between_input_character_key: 0.1
      time_for_browser_to_open_key: 60
      producer_consumer_queue_type_key: ConfluentKafka
      DBUS_SESSION_BUS_ADDRESS: 'unix:path=/var/run/dbus/system_bus_socket'
    volumes:
      - /home/mec-poc/fromMobile:/data
      #- /home/sriramsridhar/PycharmProjects/briefcam/rtsp_recorder:/data
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    extra_hosts:
      - "mec-demo: 10.2.40.160"
      - "mec-poc: 10.2.40.162"
  couchdb:
    image: couchdb
    ports:
      - 5984:5984
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
  fauxton:
    image: 3apaxicom/fauxton
    depends_on:
      - couchdb
    ports:
      - 8000:8000
    command:
      - sh
      - "-c"
      - "fauxton -c http://mec-poc:5984"
    extra_hosts:
      - "mec-poc: 10.2.40.162"
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
  front_end:
    image: ssriram1978/front_end:latest
    depends_on:
        - couchdb
    environment:
      couchdb_server_key: couchdb:5984
      database_name_key: briefcam
      id_to_container_name_key: id_to_container
      image_name_key: ssriram1978/rtsp_recorder:latest
      environment_key: video_file_path_key=/data min_file_size_key=2000000 rtsp_file_name_prefix_key=briefcam rtsp_duration_of_the_video_key=30 rtsp_capture_application_key=openRTSP
      bind_mount_key: /home/mec-poc/fromMobile:/data /etc/timezone:/etc/timezone:ro /etc/localtime:/etc/localtime:ro
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
  elk:
    image: ssriram1978/elk:latest
    ports:
      - "5601:5601"
      - "9200:9200"
      - "5044:5044"
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
  filebeat:
    image: docker.elastic.co/beats/filebeat:6.4.1
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    environment:
    - LOGSTASH_HOST=mecpoc-ProLiant-BL460c-Gen9
    - LOGSTASH_PORT=5044
    - SHIPPER_NAME=mec
    extra_hosts:
    - "mec-poc: 10.2.40.162"
  jenkins:
    image: jenkins/jenkins:lts
    volumes:
      - "/home/mec-poc/jenkins_home:/var/jenkins_home"
    ports:
      - "8082:8080"
      - "50001:50001"
volumes:
    mi2: {}